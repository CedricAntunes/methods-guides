## Standard Error
### True SE formula
V<-var(cbind(Y0,Y1))
varc<-V[1,1]
vart<-V[2,2]
covtc<-V[1,2]
n<-sum(D)
m<-N-n
varestATE<-((N-n)/(N-1))*(vart/n) + ((N-m)/(N-1))* (varc/m) + (2/(N-1)) * covtc
### Compare SEs
c(SimulatedSE= sd(manyATEs), TrueSE=sqrt(varestATE), ConservativeSE=ATE.se)
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n) p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2 Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n) p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2 Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n) p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2 Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n) p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n, p) = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n, p) = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2 Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
data=samp,
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n, p) = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2 Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2 Y = D*Y1 + (1-D)*Y0 # Observed outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
# Example adapted from ?estimate.ATE
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
# Example adapted from ?estimate.ATE
library(gam)
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
# Example adapted from ?estimate.ATE
library(gam)
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
# Example adapted from ?estimate.ATE
library(foreach)
library(gam)
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
# Example adapted from ?estimate.ATE
library(gam)
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
rm(list=ls())
# Example adapted from ?estimate.ATE
library(gam)
library(CausalGAM)
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 + 1 + X1 + X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Estimate ATE with AIPW, IPW, Regression weights
ATE.out <- estimate.ATE(pscore.formula = D ~ X1 +X2,
pscore.family = binomial,
outcome.formula.t = Y ~ X1
+X2,
outcome.formula.c = Y ~ X1
+X2,
outcome.family = gaussian,
treatment.var = "D",
data=samp,
divby0.action="t",
divby0.tol=0.001,
var.gam.plot=FALSE, nboot=50)
[^14]: Glynn, Adam N, and Kevin M Quinn. 2010. “An Introduction to the Augmented Inverse Propensity Weighted Estimator.” Political Analysis 18 (1):36–56.
rm(list=ls())
set.seed(1234) # For replication
n = 1000 # Sample size
X1 = rnorm(n) # Pre-treatment covariates
X2 = rnorm(n)
p = pnorm(-0.5 + 0.75*X2) # Unequal probabilty of Treatment
D = rbinom(n, 1, p) # Treatment
Y0 = rnorm(n) # Potential outcomes
Y1 = Y0 +1 +X1 +X2
Y = D*Y1 + (1-D)*Y0 # Observed outcomes
samp = data.frame(X1,X2,D,Y)
# Propensity score model
samp$p.score<-
predict(glm(D~X1+X2,samp,family=binomial),type="response")
# Inverse Propability Weights
samp$W.ipw<-with(samp, ifelse(D==1,1/p.score,1/(1-p.score)))
samp$W.att<-with(samp, ifelse(D==1,1,p.score/(1-p.score)))
samp$W.atc<-with(samp, ifelse(D==1,(1-p.score)/p.score,1))
# IPW: ATE, ATT, ATC
ATE.ipw<-coef(lm(Y~D,data=samp,weights=W.ipw))[2]
ATT.ipw<-coef(lm(Y~D,data=samp,weights=W.att))[2]
ATC.ipw<-coef(lm(Y~D,data=samp,weights=W.atc))[2]
rm(list=ls())
set.seed(1234) # For replication
U = runif(n) X = runif(n) # Observed Covariate
Y0 = ifelse(U>.5,1,0) # Potential Outcomes
Y1 = ifelse(U+X>.75,1,0)
D = rbinom(n,1,.75) # Randomly assign 3/4 to treatment
Y = D*Y1+Y0*(1-D)
samp = data.frame(X,D,Y)
aT<-with(samp, mean(Y[D==1]))
aC<-with(samp, mean(Y[D==0]))
# Unconditional log odds
log.odds<-log(aT/(1-aT))-log(aC/(1-aC))
# Logistic regression conditioning on X overestimates log odds
fit<-glm(Y~D+X,data=samp,binomial("logit"))
log.odds.logit<-
coef(glm(Y~D+X,data=samp,binomial("logit")))[2]
# Dataframes using original covariates for predicted probabilities
D1<-data.frame(D=1,samp[,c("X")])
D0<-data.frame(D=0,samp[,c("X")])
#Adjusted log-odds produces consisted estimator of log-odds
aT.adj<-predict(fit,newdata=D1,type="response")
aC.adj<-predict(fit,newdata=D0,type="response")
log.odds.adj<-log(mean(aT.adj)/(1-mean(aT.ad
rm(list=ls())
set.seed(1234) # For replication
U = runif(n)
X = runif(n) # Observed Covariate
Y0 = ifelse(U>.5,1,0) # Potential Outcomes
Y1 = ifelse(U+X>.75,1,0)
D = rbinom(n,1,.75) # Randomly assign 3/4 to treatment
Y = D*Y1+Y0*(1-D)
samp = data.frame(X,D,Y)
aT<-with(samp, mean(Y[D==1]))
aC<-with(samp, mean(Y[D==0]))
# Unconditional log odds
log.odds<-log(aT/(1-aT))-log(aC/(1-aC))
# Logistic regression conditioning on X overestimates log odds
fit<-glm(Y~D+X,data=samp,binomial("logit"))
log.odds.logit<-
coef(glm(Y~D+X,data=samp,binomial("logit")))[2]
# Dataframes using original covariates for predicted probabilities
D1<-data.frame(D=1,samp[,c("X")])
D0<-data.frame(D=0,samp[,c("X")])
#Adjusted log-odds produces consisted estimator of log-odds
aT.adj<-predict(fit,newdata=D1,type="response")
aC.adj<-predict(fit,newdata=D0,type="response")
log.odds.adj<-log(mean(aT.adj)/(1-mean(aT.adj)))-
log(mean(aC.adj)/(1-mean(aC.adj)))
rm(list=ls())
set.seed(1234) # For replication
n = 1000 # Sample size
U = runif(n)
X = runif(n) # Observed Covariate
Y0 = ifelse(U>.5,1,0) # Potential Outcomes
Y1 = ifelse(U+X>.75,1,0)
D = rbinom(n,1,.75) # Randomly assign 3/4 to treatment
Y = D*Y1+Y0*(1-D)
samp = data.frame(X,D,Y)
aT<-with(samp, mean(Y[D==1]))
aC<-with(samp, mean(Y[D==0]))
# Unconditional log odds
log.odds<-log(aT/(1-aT))-log(aC/(1-aC))
# Logistic regression conditioning on X overestimates log odds
fit<-glm(Y~D+X,data=samp,binomial("logit"))
log.odds.logit<-
coef(glm(Y~D+X,data=samp,binomial("logit")))[2]
# Dataframes using original covariates for predicted probabilities
D1<-data.frame(D=1,samp[,c("X")])
D0<-data.frame(D=0,samp[,c("X")])
#Adjusted log-odds produces consisted estimator of log-odds
aT.adj<-predict(fit,newdata=D1,type="response")
aC.adj<-predict(fit,newdata=D0,type="response")
log.odds.adj<-log(mean(aT.adj)/(1-mean(aT.adj)))-
log(mean(aC.adj)/(1-mean(aC.adj)))
rm(list=ls())
set.seed(1234) # For replication
n = 1000 # Sample size
U = runif(n)
X = runif(n) # Observed Covariate
Y0 = ifelse(U>.5,1,0) # Potential Outcomes
Y1 = ifelse(U+X>.75,1,0)
D = rbinom(n,1,.75) # Randomly assign 3/4 to treatment
Y = D*Y1+Y0*(1-D)
samp = data.frame(X,D,Y)
aT<-with(samp, mean(Y[D==1]))
aC<-with(samp, mean(Y[D==0]))
# Unconditional log odds
log.odds<-log(aT/(1-aT))-log(aC/(1-aC))
# Logistic regression conditioning on X overestimates log odds
fit<-glm(Y~D+X,data=samp,binomial("logit"))
log.odds.logit<-
coef(glm(Y~D+X,data=samp,binomial("logit")))[2]
# Dataframes using original covariates for predicted probabilities
D1<-data.frame(D=1,samp[,c("X")])
D0<-data.frame(D=0,samp[,c("X")])
#Adjusted log-odds produces consisted estimator of log-odds
aT.adj<-predict(fit,newdata=D1,type="response")
aC.adj<-predict(fit,newdata=D0,type="response")
log.odds.adj<-log(mean(aT.adj)/(1-mean(aT.adj)))-
log(mean(aC.adj)/(1-mean(aC.adj)))
title: "10 Things You Need to Know About the Local Average Treatment Effect""
author: Peter van der Windt
output: html_document
rm(list=ls())
---
title: "10 Things You Need to Know About the Local Average Treatment Effect""
author: Peter van der Windt
output: html_document
---
